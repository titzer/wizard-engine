import component wali {
	def SYS_open(pathname: Pointer, flags: i32, mode: i32) -> i64;
	def SYS_close(fd: i32) -> i64;
	def SYS_read(fd: i32, buf: Pointer, count: i32) -> i64;
	def SYS_write(fd: i32, buf: Pointer, count: i32) -> i64;
	def SYS_dup(fd: i32) -> i64;
}

def O_RDONLY = 0;
def STDOUT = 1;
def READ_SIZE = 40;
def main() -> i64 {
	var filename = "lorem-ipsum.txt\x00";
	var fd = wali.SYS_open(Pointer.atContents(filename), O_RDONLY, 0);
	var newfd = wali.SYS_dup(i32.view(fd));
	wali.SYS_close(i32.view(fd));
	var read_result = readfd(i32.view(newfd), READ_SIZE);
	wali.SYS_write(STDOUT, Pointer.atContents(read_result), READ_SIZE);
	wali.SYS_close(i32.view(newfd));
	return 0;
}

def readfd(fd: i32, length: i32) -> string {
	var str = Array<byte>.new(length);
	wali.SYS_read(i32.view(fd), Pointer.atContents(str), length);
	return str;
}
