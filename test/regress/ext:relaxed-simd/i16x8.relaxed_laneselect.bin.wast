(module binary
  "\00\61\73\6d\01\00\00\00\01\88\80\80\80\00\01\60"
  "\03\7b\7b\7b\01\7b\03\83\80\80\80\00\02\00\00\07"
  "\bb\80\80\80\00\02\18\69\31\36\78\38\2e\72\65\6c"
  "\61\78\65\64\5f\6c\61\6e\65\73\65\6c\65\63\74\00"
  "\00\1c\69\31\36\78\38\2e\72\65\6c\61\78\65\64\5f"
  "\6c\61\6e\65\73\65\6c\65\63\74\5f\63\6d\70\00\01"
  "\0a\ac\80\80\80\00\02\8b\80\80\80\00\00\20\00\20"
  "\01\20\02\fd\8a\02\0b\96\80\80\80\00\00\20\00\20"
  "\01\20\02\fd\8a\02\20\00\20\01\20\02\fd\8a\02\fd"
  "\2d\0b"
)
(assert_return
  (invoke "i16x8.relaxed_laneselect"
    (v128.const i32x4 0x1_0000 0x1234_1234 0x5_0004 0x7_0006)
    (v128.const i32x4 0x9_0008 0x5678_5678 0xd_000c 0xf_000e)
    (v128.const i32x4 0xffff 0xff_ff00 0x0 0x0)
  )
  (either
    (v128.const i16x8 0x0 0x9 0x1278 0x5634 0xc 0xd 0xe 0xf)
    (v128.const i16x8 0x0 0x9 0x1234 0x5678 0xc 0xd 0xe 0xf)
  )
)
(assert_return
  (invoke "i16x8.relaxed_laneselect"
    (v128.const i32x4 0x1_0000 0x1234_1234 0x5_0004 0x7_0006)
    (v128.const i32x4 0x9_0008 0x5678_5678 0xd_000c 0xf_000e)
    (v128.const i32x4 0xffff 0x80_ff00 0x0 0x0)
  )
  (either
    (v128.const i16x8 0x0 0x9 0x1278 0x5678 0xc 0xd 0xe 0xf)
    (v128.const i16x8 0x0 0x9 0x1234 0x5678 0xc 0xd 0xe 0xf)
    (v128.const i16x8 0x0 0x9 0x1278 0x5634 0xc 0xd 0xe 0xf)
  )
)
(assert_return
  (invoke "i16x8.relaxed_laneselect_cmp"
    (v128.const i32x4 0x1_0000 0x1234_1234 0x5_0004 0x7_0006)
    (v128.const i32x4 0x9_0008 0x5678_5678 0xd_000c 0xf_000e)
    (v128.const i32x4 0xffff 0xff_ff00 0x0 0x0)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
