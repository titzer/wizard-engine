(module binary
  "\00\61\73\6d\01\00\00\00\01\8c\80\80\80\00\02\60"
  "\02\7b\7b\01\7b\60\01\7b\01\7b\03\85\80\80\80\00"
  "\04\00\00\00\01\07\b1\80\80\80\00\04\09\69\31\36"
  "\78\38\2e\61\64\64\00\00\09\69\31\36\78\38\2e\73"
  "\75\62\00\01\09\69\31\36\78\38\2e\6d\75\6c\00\02"
  "\09\69\31\36\78\38\2e\6e\65\67\00\03\0a\b7\80\80"
  "\80\00\04\89\80\80\80\00\00\20\00\20\01\fd\8e\01"
  "\0b\89\80\80\80\00\00\20\00\20\01\fd\91\01\0b\89"
  "\80\80\80\00\00\20\00\20\01\fd\95\01\0b\87\80\80"
  "\80\00\00\20\00\fd\81\01\0b"
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x2 0x2 0x2 0x2 0x2 0x2 0x2 0x2)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x3fff_3fff 0x3fff_3fff 0x3fff_3fff 0x3fff_3fff)
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xc001_c001 0xc001_c001 0xc001_c001 0xc001_c001)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xbfff_bfff 0xbfff_bfff 0xbfff_bfff 0xbfff_bfff)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x7ffd_7ffd 0x7ffd_7ffd 0x7ffd_7ffd 0x7ffd_7ffd)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x7ffe_7ffe 0x7ffe_7ffe 0x7ffe_7ffe 0x7ffe_7ffe)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x8002_8002 0x8002_8002 0x8002_8002 0x8002_8002)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x8001_8001 0x8001_8001 0x8001_8001 0x8001_8001)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
  )
  (v128.const i16x8 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x8001_8001 0x8001_8001 0x8001_8001 0x8001_8001)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
  )
  (v128.const i16x8 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x3fff_3fff 0x3fff_3fff 0x3fff_3fff 0x3fff_3fff)
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xc001_c001 0xc001_c001 0xc001_c001 0xc001_c001)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
    (v128.const i32x4 0xbfff_bfff 0xbfff_bfff 0xbfff_bfff 0xbfff_bfff)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
  )
  (v128.const i16x8 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x8000_0000 0x8000_0000 0x8000_0000 0x8000_0000)
  )
  (v128.const i16x8 0x8000 0x0 0x8000 0x0 0x8000 0x0 0x8000 0x0)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x3f80_0000 0x3f80_0000 0x3f80_0000 0x3f80_0000)
  )
  (v128.const i16x8 0x8000 0xbf80 0x8000 0xbf80 0x8000 0xbf80 0x8000 0xbf80)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0xbf80_0000 0xbf80_0000 0xbf80_0000 0xbf80_0000)
  )
  (v128.const i16x8 0x8000 0x3f80 0x8000 0x3f80 0x8000 0x3f80 0x8000 0x3f80)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0x7f80_0000 0x7f80_0000 0x7f80_0000 0x7f80_0000)
  )
  (v128.const i16x8 0x1 0x7f81 0x1 0x7f81 0x1 0x7f81 0x1 0x7f81)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0xff80_0000 0xff80_0000 0xff80_0000 0xff80_0000)
  )
  (v128.const i16x8 0x1 0xff81 0x1 0xff81 0x1 0xff81 0x1 0xff81)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0x7fc0_0000 0x7fc0_0000 0x7fc0_0000 0x7fc0_0000)
  )
  (v128.const i16x8 0x1 0x7fc1 0x1 0x7fc1 0x1 0x7fc1 0x1 0x7fc1)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x1_0000 0x3_0002 0x5_0004 0x7_0006)
    (v128.const i32x4 0xffff_0000 0xfffd_fffe 0xfffb_fffc 0xfff9_fffa)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x1_0000 0x3_0002 0x5_0004 0x7_0006)
    (v128.const i32x4 0x2_0000 0x6_0004 0xa_0008 0xe_000c)
  )
  (v128.const i16x8 0x0 0x3 0x6 0x9 0xc 0xf 0x12 0x15)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x3039_3039 0x3039_3039 0x3039_3039 0x3039_3039)
    (v128.const i32x4 0xddd5_ddd5 0xddd5_ddd5 0xddd5_ddd5 0xddd5_ddd5)
  )
  (v128.const i16x8 0xe0e 0xe0e 0xe0e 0xe0e 0xe0e 0xe0e 0xe0e 0xe0e)
)
(assert_return
  (invoke "i16x8.add"
    (v128.const i32x4 0x1234_1234 0x1234_1234 0x1234_1234 0x1234_1234)
    (v128.const i32x4 0x5678_5678 0x5678_5678 0x5678_5678 0x5678_5678)
  )
  (v128.const i16x8 0x68ac 0x68ac 0x68ac 0x68ac 0x68ac 0x68ac 0x68ac 0x68ac)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x2 0x2 0x2 0x2 0x2 0x2 0x2 0x2)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x3fff_3fff 0x3fff_3fff 0x3fff_3fff 0x3fff_3fff)
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xc001_c001 0xc001_c001 0xc001_c001 0xc001_c001)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xbfff_bfff 0xbfff_bfff 0xbfff_bfff 0xbfff_bfff)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x7ffd_7ffd 0x7ffd_7ffd 0x7ffd_7ffd 0x7ffd_7ffd)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x7ffc 0x7ffc 0x7ffc 0x7ffc 0x7ffc 0x7ffc 0x7ffc 0x7ffc)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x7ffe_7ffe 0x7ffe_7ffe 0x7ffe_7ffe 0x7ffe_7ffe)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x7ffd 0x7ffd 0x7ffd 0x7ffd 0x7ffd 0x7ffd 0x7ffd 0x7ffd)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x8002_8002 0x8002_8002 0x8002_8002 0x8002_8002)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x8003 0x8003 0x8003 0x8003 0x8003 0x8003 0x8003 0x8003)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x8001_8001 0x8001_8001 0x8001_8001 0x8001_8001)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x8002 0x8002 0x8002 0x8002 0x8002 0x8002 0x8002 0x8002)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x8001_8001 0x8001_8001 0x8001_8001 0x8001_8001)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x3fff_3fff 0x3fff_3fff 0x3fff_3fff 0x3fff_3fff)
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xc001_c001 0xc001_c001 0xc001_c001 0xc001_c001)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
    (v128.const i32x4 0xbfff_bfff 0xbfff_bfff 0xbfff_bfff 0xbfff_bfff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe 0xfffe)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x2 0x2 0x2 0x2 0x2 0x2 0x2 0x2)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x2 0x2 0x2 0x2 0x2 0x2 0x2 0x2)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x8000_0000 0x8000_0000 0x8000_0000 0x8000_0000)
  )
  (v128.const i16x8 0x8000 0x0 0x8000 0x0 0x8000 0x0 0x8000 0x0)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x3f80_0000 0x3f80_0000 0x3f80_0000 0x3f80_0000)
  )
  (v128.const i16x8 0x8000 0x4080 0x8000 0x4080 0x8000 0x4080 0x8000 0x4080)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0xbf80_0000 0xbf80_0000 0xbf80_0000 0xbf80_0000)
  )
  (v128.const i16x8 0x8000 0xc080 0x8000 0xc080 0x8000 0xc080 0x8000 0xc080)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0x7f80_0000 0x7f80_0000 0x7f80_0000 0x7f80_0000)
  )
  (v128.const i16x8 0x1 0x8081 0x1 0x8081 0x1 0x8081 0x1 0x8081)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0xff80_0000 0xff80_0000 0xff80_0000 0xff80_0000)
  )
  (v128.const i16x8 0x1 0x81 0x1 0x81 0x1 0x81 0x1 0x81)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0x7fc0_0000 0x7fc0_0000 0x7fc0_0000 0x7fc0_0000)
  )
  (v128.const i16x8 0x1 0x8041 0x1 0x8041 0x1 0x8041 0x1 0x8041)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x1_0000 0x3_0002 0x5_0004 0x7_0006)
    (v128.const i32x4 0xffff_0000 0xfffd_fffe 0xfffb_fffc 0xfff9_fffa)
  )
  (v128.const i16x8 0x0 0x2 0x4 0x6 0x8 0xa 0xc 0xe)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x1_0000 0x3_0002 0x5_0004 0x7_0006)
    (v128.const i32x4 0x2_0000 0x6_0004 0xa_0008 0xe_000c)
  )
  (v128.const i16x8 0x0 0xffff 0xfffe 0xfffd 0xfffc 0xfffb 0xfffa 0xfff9)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0xddd5_ddd5 0xddd5_ddd5 0xddd5_ddd5 0xddd5_ddd5)
    (v128.const i32x4 0x3039_3039 0x3039_3039 0x3039_3039 0x3039_3039)
  )
  (v128.const i16x8 0xad9c 0xad9c 0xad9c 0xad9c 0xad9c 0xad9c 0xad9c 0xad9c)
)
(assert_return
  (invoke "i16x8.sub"
    (v128.const i32x4 0x5678_5678 0x5678_5678 0x5678_5678 0x5678_5678)
    (v128.const i32x4 0x1234_1234 0x1234_1234 0x1234_1234 0x1234_1234)
  )
  (v128.const i16x8 0x4444 0x4444 0x4444 0x4444 0x4444 0x4444 0x4444 0x4444)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x0 0x0 0x0 0x0)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x3fff_3fff 0x3fff_3fff 0x3fff_3fff 0x3fff_3fff)
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
  )
  (v128.const i16x8 0xc000 0xc000 0xc000 0xc000 0xc000 0xc000 0xc000 0xc000)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xc001_c001 0xc001_c001 0xc001_c001 0xc001_c001)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0xc000 0xc000 0xc000 0xc000 0xc000 0xc000 0xc000 0xc000)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xbfff_bfff 0xbfff_bfff 0xbfff_bfff 0xbfff_bfff)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0x4000 0x4000 0x4000 0x4000 0x4000 0x4000 0x4000 0x4000)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x7ffd_7ffd 0x7ffd_7ffd 0x7ffd_7ffd 0x7ffd_7ffd)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x7ffd 0x7ffd 0x7ffd 0x7ffd 0x7ffd 0x7ffd 0x7ffd 0x7ffd)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x7ffe_7ffe 0x7ffe_7ffe 0x7ffe_7ffe 0x7ffe_7ffe)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x8002_8002 0x8002_8002 0x8002_8002 0x8002_8002)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe 0x7ffe)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x8001_8001 0x8001_8001 0x8001_8001 0x8001_8001)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x8001_8001 0x8001_8001 0x8001_8001 0x8001_8001)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
  )
  (v128.const i16x8 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x3fff_3fff 0x3fff_3fff 0x3fff_3fff 0x3fff_3fff)
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
  )
  (v128.const i16x8 0xc000 0xc000 0xc000 0xc000 0xc000 0xc000 0xc000 0xc000)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
    (v128.const i32x4 0x4000_4000 0x4000_4000 0x4000_4000 0x4000_4000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xc001_c001 0xc001_c001 0xc001_c001 0xc001_c001)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0xc000 0xc000 0xc000 0xc000 0xc000 0xc000 0xc000 0xc000)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xc000_c000 0xc000_c000 0xc000_c000 0xc000_c000)
    (v128.const i32x4 0xbfff_bfff 0xbfff_bfff 0xbfff_bfff 0xbfff_bfff)
  )
  (v128.const i16x8 0x4000 0x4000 0x4000 0x4000 0x4000 0x4000 0x4000 0x4000)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
  )
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x1000_1000 0x1000_1000 0x1000_1000 0x1000_1000)
    (v128.const i32x4 0x1010_1010 0x1010_1010 0x1010_1010 0x1010_1010)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x2_0002 0x2_0002 0x2_0002 0x2_0002)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x0 0x0 0x0 0x0)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x8000_0000 0x8000_0000 0x8000_0000 0x8000_0000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0x3f80_0000 0x3f80_0000 0x3f80_0000 0x3f80_0000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
    (v128.const i32x4 0xbf80_0000 0xbf80_0000 0xbf80_0000 0xbf80_0000)
  )
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0x7f80_0000 0x7f80_0000 0x7f80_0000 0x7f80_0000)
  )
  (v128.const i16x8 0x0 0x7f80 0x0 0x7f80 0x0 0x7f80 0x0 0x7f80)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0xff80_0000 0xff80_0000 0xff80_0000 0xff80_0000)
  )
  (v128.const i16x8 0x0 0xff80 0x0 0xff80 0x0 0xff80 0x0 0xff80)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001)
    (v128.const i32x4 0x7fc0_0000 0x7fc0_0000 0x7fc0_0000 0x7fc0_0000)
  )
  (v128.const i16x8 0x0 0x7fc0 0x0 0x7fc0 0x0 0x7fc0 0x0 0x7fc0)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x1_0000 0x3_0002 0x5_0004 0x7_0006)
    (v128.const i32x4 0xffff_0000 0xfffd_fffe 0xfffb_fffc 0xfff9_fffa)
  )
  (v128.const i16x8 0x0 0xffff 0xfffc 0xfff7 0xfff0 0xffe7 0xffdc 0xffcf)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x1_0000 0x3_0002 0x5_0004 0x7_0006)
    (v128.const i32x4 0x2_0000 0x6_0004 0xa_0008 0xe_000c)
  )
  (v128.const i16x8 0x0 0x2 0x8 0x12 0x20 0x32 0x48 0x62)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x3039_3039 0x3039_3039 0x3039_3039 0x3039_3039)
    (v128.const i32x4 0xddd5_ddd5 0xddd5_ddd5 0xddd5_ddd5 0xddd5_ddd5)
  )
  (v128.const i16x8 0x546d 0x546d 0x546d 0x546d 0x546d 0x546d 0x546d 0x546d)
)
(assert_return
  (invoke "i16x8.mul"
    (v128.const i32x4 0x1234_1234 0x1234_1234 0x1234_1234 0x1234_1234)
    (v128.const i32x4 0xcdef_cdef 0xcdef_cdef 0xcdef_cdef 0xcdef_cdef)
  )
  (v128.const i16x8 0xa28c 0xa28c 0xa28c 0xa28c 0xa28c 0xa28c 0xa28c 0xa28c)
)
(assert_return
  (invoke "i16x8.neg" (v128.const i32x4 0x0 0x0 0x0 0x0))
  (v128.const i16x8 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0)
)
(assert_return
  (invoke "i16x8.neg" (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001))
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.neg"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.neg"
    (v128.const i32x4 0x7ffe_7ffe 0x7ffe_7ffe 0x7ffe_7ffe 0x7ffe_7ffe)
  )
  (v128.const i16x8 0x8002 0x8002 0x8002 0x8002 0x8002 0x8002 0x8002 0x8002)
)
(assert_return
  (invoke "i16x8.neg"
    (v128.const i32x4 0x8001_8001 0x8001_8001 0x8001_8001 0x8001_8001)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.neg"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.neg"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
  )
  (v128.const i16x8 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001)
)
(assert_return
  (invoke "i16x8.neg"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.neg" (v128.const i32x4 0x1_0001 0x1_0001 0x1_0001 0x1_0001))
  (v128.const i16x8 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff 0xffff)
)
(assert_return
  (invoke "i16x8.neg"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_return
  (invoke "i16x8.neg"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.neg"
    (v128.const i32x4 0x8001_8001 0x8001_8001 0x8001_8001 0x8001_8001)
  )
  (v128.const i16x8 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff 0x7fff)
)
(assert_return
  (invoke "i16x8.neg"
    (v128.const i32x4 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff 0x7fff_7fff)
  )
  (v128.const i16x8 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001 0x8001)
)
(assert_return
  (invoke "i16x8.neg"
    (v128.const i32x4 0x8000_8000 0x8000_8000 0x8000_8000 0x8000_8000)
  )
  (v128.const i16x8 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000 0x8000)
)
(assert_return
  (invoke "i16x8.neg"
    (v128.const i32x4 0xffff_ffff 0xffff_ffff 0xffff_ffff 0xffff_ffff)
  )
  (v128.const i16x8 0x1 0x1 0x1 0x1 0x1 0x1 0x1 0x1)
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8d\80\80\80"
    "\00\01\87\80\80\80\00\00\41\00\fd\81\01\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\92\80\80\80"
    "\00\01\8c\80\80\80\00\00\41\00\43\00\00\00\00\fd"
    "\8e\01\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\92\80\80\80"
    "\00\01\8c\80\80\80\00\00\41\00\43\00\00\00\00\fd"
    "\91\01\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\92\80\80\80"
    "\00\01\8c\80\80\80\00\00\41\00\43\00\00\00\00\fd"
    "\95\01\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8b\80\80\80"
    "\00\01\85\80\80\80\00\00\fd\81\01\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\9d\80\80\80"
    "\00\01\97\80\80\80\00\00\fd\0c\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\fd\8e\01\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8b\80\80\80"
    "\00\01\85\80\80\80\00\00\fd\8e\01\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\9d\80\80\80"
    "\00\01\97\80\80\80\00\00\fd\0c\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\fd\91\01\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8b\80\80\80"
    "\00\01\85\80\80\80\00\00\fd\91\01\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\9d\80\80\80"
    "\00\01\97\80\80\80\00\00\fd\0c\00\00\00\00\00\00"
    "\00\00\00\00\00\00\00\00\00\00\fd\95\01\0b"
  )
  "type mismatch"
)
(assert_invalid
  (module binary
    "\00\61\73\6d\01\00\00\00\01\85\80\80\80\00\01\60"
    "\00\01\7b\03\82\80\80\80\00\01\00\0a\8b\80\80\80"
    "\00\01\85\80\80\80\00\00\fd\95\01\0b"
  )
  "type mismatch"
)
