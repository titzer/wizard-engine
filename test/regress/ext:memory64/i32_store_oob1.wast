(module
  (memory i64 2)

  ;; Same offsets as your load tests, but using stores.
  ;; Pattern: (i32.store offset=... (i64.const 0) (i32.const 0))

  (func (export "store_0x1000_0000_0000_0000")  (i32.store offset=0x1000_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x2000_0000_0000_0000")  (i32.store offset=0x2000_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x4000_0000_0000_0000")  (i32.store offset=0x4000_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x8000_0000_0000_0000")  (i32.store offset=0x8000_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0100_0000_0000_0000")  (i32.store offset=0x0100_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0200_0000_0000_0000")  (i32.store offset=0x0200_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0400_0000_0000_0000")  (i32.store offset=0x0400_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0800_0000_0000_0000")  (i32.store offset=0x0800_0000_0000_0000 (i64.const 0) (i32.const 0)))

  (func (export "store_0x0010_0000_0000_0000")  (i32.store offset=0x0010_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0020_0000_0000_0000")  (i32.store offset=0x0020_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0040_0000_0000_0000")  (i32.store offset=0x0040_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0080_0000_0000_0000")  (i32.store offset=0x0080_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0001_0000_0000_0000")  (i32.store offset=0x0001_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0002_0000_0000_0000")  (i32.store offset=0x0002_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0004_0000_0000_0000")  (i32.store offset=0x0004_0000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0008_0000_0000_0000")  (i32.store offset=0x0008_0000_0000_0000 (i64.const 0) (i32.const 0)))

  (func (export "store_0x0000_1000_0000_0000")  (i32.store offset=0x0000_1000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_2000_0000_0000")  (i32.store offset=0x0000_2000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_4000_0000_0000")  (i32.store offset=0x0000_4000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_8000_0000_0000")  (i32.store offset=0x0000_8000_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0100_0000_0000")  (i32.store offset=0x0000_0100_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0200_0000_0000")  (i32.store offset=0x0000_0200_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0400_0000_0000")  (i32.store offset=0x0000_0400_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0800_0000_0000")  (i32.store offset=0x0000_0800_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0010_0000_0000")  (i32.store offset=0x0000_0010_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0020_0000_0000")  (i32.store offset=0x0000_0020_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0040_0000_0000")  (i32.store offset=0x0000_0040_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0080_0000_0000")  (i32.store offset=0x0000_0080_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0001_0000_0000")  (i32.store offset=0x0000_0001_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0002_0000_0000")  (i32.store offset=0x0000_0002_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0004_0000_0000")  (i32.store offset=0x0000_0004_0000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0008_0000_0000")  (i32.store offset=0x0000_0008_0000_0000 (i64.const 0) (i32.const 0)))

  (func (export "store_0x0000_0000_1000_0000")  (i32.store offset=0x0000_0000_1000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0000_2000_0000")  (i32.store offset=0x0000_0000_2000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0000_4000_0000")  (i32.store offset=0x0000_0000_4000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0000_8000_0000")  (i32.store offset=0x0000_0000_8000_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0000_0100_0000")  (i32.store offset=0x0000_0000_0100_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0000_0200_0000")  (i32.store offset=0x0000_0000_0200_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0000_0400_0000")  (i32.store offset=0x0000_0000_0400_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0000_0800_0000")  (i32.store offset=0x0000_0000_0800_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0000_0010_0000")  (i32.store offset=0x0000_0000_0010_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0000_0020_0000")  (i32.store offset=0x0000_0000_0020_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0000_0040_0000")  (i32.store offset=0x0000_0000_0040_0000 (i64.const 0) (i32.const 0)))
  (func (export "store_0x0000_0000_0080_0000")  (i32.store offset=0x0000_0000_0080_0000 (i64.const 0) (i32.const 0)))
)

  ;; Assertions: every store must trap with memory64 on a 2-page (128KiB) memory.
  (assert_trap (invoke "store_0x1000_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x2000_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x4000_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x8000_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0100_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0200_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0400_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0800_0000_0000_0000") "out of bounds memory access")

  (assert_trap (invoke "store_0x0010_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0020_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0040_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0080_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0001_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0002_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0004_0000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0008_0000_0000_0000") "out of bounds memory access")

  (assert_trap (invoke "store_0x0000_1000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_2000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_4000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_8000_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0100_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0200_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0400_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0800_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0010_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0020_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0040_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0080_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0001_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0002_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0004_0000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0008_0000_0000") "out of bounds memory access")

  (assert_trap (invoke "store_0x0000_0000_1000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0000_2000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0000_4000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0000_8000_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0000_0100_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0000_0200_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0000_0400_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0000_0800_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0000_0010_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0000_0020_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0000_0040_0000") "out of bounds memory access")
  (assert_trap (invoke "store_0x0000_0000_0080_0000") "out of bounds memory access")
