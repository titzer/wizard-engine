+3: <probe> i32.const[3]
+5: <probe> local.set[0]
#1+3-->#1+5
+7: <probe> loop[]
#1+5-->#1+7
+9: <probe> call[func=2]
#1+7-->#1+9
  +1: <probe> end
#1+9-->#2+1
+11: <probe> call[func=3]
#2+1-->#1+11
  +1: <probe> call[func=4]
#1+11-->#3+1
    +1: <probe> end
#3+1-->#4+1
  +3: <probe> end
#4+1-->#3+3
+13: <probe> call[func=4]
#3+3-->#1+13
  +1: <probe> end
#1+13-->#4+1
+15: <probe> local.get[0]
#4+1-->#1+15
+17: <probe> i32.const[1]
#1+15-->#1+17
+19: <probe> i32.ge_s
#1+17-->#1+19
+20: <probe> if[]
#1+19-->#1+20
+22: <probe> i32.const[123]
#1+20-->#1+22
+25: <probe> drop
#1+22-->#1+25
+26: <probe> else
#1+25-->#1+26
+31: <probe> end
#1+26-->#1+31
+32: <probe> i32.const[0]
#1+31-->#1+32
+34: <probe> call_indirect[sig=0,table=0]
#1+32-->#1+34
  +1: <probe> end
#1+34-->#2+1
+37: <probe> i32.const[1]
#2+1-->#1+37
+39: <probe> call_indirect[sig=0,table=0]
#1+37-->#1+39
  +1: <probe> call[func=4]
#1+39-->#3+1
    +1: <probe> end
#3+1-->#4+1
  +3: <probe> end
#4+1-->#3+3
+42: <probe> i32.const[2]
#3+3-->#1+42
+44: <probe> call_indirect[sig=0,table=0]
#1+42-->#1+44
  +1: <probe> end
#1+44-->#4+1
+47: <probe> local.get[0]
#4+1-->#1+47
+49: <probe> i32.const[1]
#1+47-->#1+49
+51: <probe> i32.sub
#1+49-->#1+51
+52: <probe> local.tee[0]
#1+51-->#1+52
+54: <probe> br_if[depth=0]
#1+52-->#1+54
+7: <probe> loop[]
#1+54-->#1+7
+9: <probe> call[func=2]
#1+7-->#1+9
  +1: <probe> end
#1+9-->#2+1
+11: <probe> call[func=3]
#2+1-->#1+11
  +1: <probe> call[func=4]
#1+11-->#3+1
    +1: <probe> end
#3+1-->#4+1
  +3: <probe> end
#4+1-->#3+3
+13: <probe> call[func=4]
#3+3-->#1+13
  +1: <probe> end
#1+13-->#4+1
+15: <probe> local.get[0]
#4+1-->#1+15
+17: <probe> i32.const[1]
#1+15-->#1+17
+19: <probe> i32.ge_s
#1+17-->#1+19
+20: <probe> if[]
#1+19-->#1+20
+22: <probe> i32.const[123]
#1+20-->#1+22
+25: <probe> drop
#1+22-->#1+25
+26: <probe> else
#1+25-->#1+26
+31: <probe> end
#1+26-->#1+31
+32: <probe> i32.const[0]
#1+31-->#1+32
+34: <probe> call_indirect[sig=0,table=0]
#1+32-->#1+34
  +1: <probe> end
#1+34-->#2+1
+37: <probe> i32.const[1]
#2+1-->#1+37
+39: <probe> call_indirect[sig=0,table=0]
#1+37-->#1+39
  +1: <probe> call[func=4]
#1+39-->#3+1
    +1: <probe> end
#3+1-->#4+1
  +3: <probe> end
#4+1-->#3+3
+42: <probe> i32.const[2]
#3+3-->#1+42
+44: <probe> call_indirect[sig=0,table=0]
#1+42-->#1+44
  +1: <probe> end
#1+44-->#4+1
+47: <probe> local.get[0]
#4+1-->#1+47
+49: <probe> i32.const[1]
#1+47-->#1+49
+51: <probe> i32.sub
#1+49-->#1+51
+52: <probe> local.tee[0]
#1+51-->#1+52
+54: <probe> br_if[depth=0]
#1+52-->#1+54
+7: <probe> loop[]
#1+54-->#1+7
+9: <probe> call[func=2]
#1+7-->#1+9
  +1: <probe> end
#1+9-->#2+1
+11: <probe> call[func=3]
#2+1-->#1+11
  +1: <probe> call[func=4]
#1+11-->#3+1
    +1: <probe> end
#3+1-->#4+1
  +3: <probe> end
#4+1-->#3+3
+13: <probe> call[func=4]
#3+3-->#1+13
  +1: <probe> end
#1+13-->#4+1
+15: <probe> local.get[0]
#4+1-->#1+15
+17: <probe> i32.const[1]
#1+15-->#1+17
+19: <probe> i32.ge_s
#1+17-->#1+19
+20: <probe> if[]
#1+19-->#1+20
+22: <probe> i32.const[123]
#1+20-->#1+22
+25: <probe> drop
#1+22-->#1+25
+26: <probe> else
#1+25-->#1+26
+31: <probe> end
#1+26-->#1+31
+32: <probe> i32.const[0]
#1+31-->#1+32
+34: <probe> call_indirect[sig=0,table=0]
#1+32-->#1+34
  +1: <probe> end
#1+34-->#2+1
+37: <probe> i32.const[1]
#2+1-->#1+37
+39: <probe> call_indirect[sig=0,table=0]
#1+37-->#1+39
  +1: <probe> call[func=4]
#1+39-->#3+1
    +1: <probe> end
#3+1-->#4+1
  +3: <probe> end
#4+1-->#3+3
+42: <probe> i32.const[2]
#3+3-->#1+42
+44: <probe> call_indirect[sig=0,table=0]
#1+42-->#1+44
  +1: <probe> end
#1+44-->#4+1
+47: <probe> local.get[0]
#4+1-->#1+47
+49: <probe> i32.const[1]
#1+47-->#1+49
+51: <probe> i32.sub
#1+49-->#1+51
+52: <probe> local.tee[0]
#1+51-->#1+52
+54: <probe> br_if[depth=0]
#1+52-->#1+54
+56: <probe> end
#1+54-->#1+56
+57: <probe> end
#1+56-->#1+57
