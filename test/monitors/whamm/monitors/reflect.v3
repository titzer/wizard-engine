import component wizeng {
	def puti(i: int);
	def puts(start: Pointer, length: u32);
}

def puti = wizeng.puti;
def putu(i: u32) {
	wizeng.puti(int.!(i));
}
def puts(str: string) {
	wizeng.puts(Pointer.atContents(str), u32.!(str.length));
}

def main() {
}

export "wasm:exit" def exit() {
	puts("Module defs:\n");
	print_defs("Type", Reflect.get_num_types, Reflect.read_type_def);
	print_defs("Import", Reflect.get_num_imports, Reflect.read_import_def);
	print_defs("Function", Reflect.get_num_functions, Reflect.read_function_def);
	print_defs("Table", Reflect.get_num_tables, Reflect.read_table_def);
	print_defs("Memory", Reflect.get_num_memories, Reflect.read_memory_def);
	print_defs("Global", Reflect.get_num_globals, Reflect.read_global_def);
	print_defs("Tag", Reflect.get_num_tags, Reflect.read_tag_def);
	print_defs("Export", Reflect.get_num_exports, Reflect.read_export_def);
	print_defs("Elem", Reflect.get_num_elements, Reflect.read_element_def);
	print_defs("Data", Reflect.get_num_data, Reflect.read_data_def);
	print_defs("Custom", Reflect.get_num_custom_sections, Reflect.read_custom_section);
}

def buffer = Array<byte>.new(16);

def print_defs(name: string, count: void -> u32, read: (Range<byte>, u32) -> u32) {
	var num = count();
	if (num == 0) return;
	puts(name);
	puts("[");
	putu(num);
	puts("]:\n");
	for (i < num) {
		puts(" - ");
		var len = read(buffer, i);
		var end = if(len > buffer.length, buffer.length, int.!(len));
		for (j < end) {
			puts(" ");
			putb(buffer[j]);
		}
		if (len > buffer.length) {
			puts("... [");
			putu(len);
			puts(" bytes]");
		}
		puts("\n");
	}
}

def hexMap_u = "0123456789ABCDEF";
def putb(b: byte) {
	wizeng.puts(Pointer.atElement(hexMap_u, b >> 4), 1);
	wizeng.puts(Pointer.atElement(hexMap_u, b & 15), 1);
}
