// Copyright 2023 Wizard Authors. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

def ui = Values.unbox_i;
def uu = Values.unbox_u;
def bi = Values.box_i;
def bu = Values.box_u;
def ri = fun (v: int) => HostResult.Value1(Values.box_i(v));
def ru = fun (v: u32) => HostResult.Value1(Values.box_u(v));

// Utility methods that adapt host (V3) functions to be called from Wasm.
component HostAdapters {
	def ii_i(func: (int, int) -> int) =>		HostFunc(SigCache.ii_i, fun args => ri(func(ui(args[0]), ui(args[1]))));
	def ii_r(func: (int, int) -> HostResult) =>	HostFunc(SigCache.ii_i, fun args => func(ui(args[0]), ui(args[1])));
	def uu_u(func: (u32, u32) -> u32) =>		HostFunc(SigCache.ii_i, fun args => ru(func(uu(args[0]), uu(args[1]))));
	def uu_r(func: (u32, u32) -> HostResult) =>	HostFunc(SigCache.ii_i, fun args => func(uu(args[0]), uu(args[1])));

	def C_ii_i<C>(func: (C, int, int) -> int) => fun (c: C) => HostFunc(SigCache.ii_i, fun args => ri(func(c, ui(args[0]), ui(args[1]))));
	def C_uu_u<C>(func: (C, u32, u32) -> u32) => fun (c: C) => HostFunc(SigCache.ii_i, fun args => ru(func(c, uu(args[0]), uu(args[1]))));

}
