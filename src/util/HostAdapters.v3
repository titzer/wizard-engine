// Copyright 2023 Wizard Authors. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

def ui = Values.unbox_i;
def uu = Values.unbox_u;
def ul = Values.unbox_l;
def bi = Values.box_i;
def bu = Values.box_u;
def ri = fun (v: int) => HostResult.Value1(Values.box_i(v));
def ru = fun (v: u32) => HostResult.Value1(Values.box_u(v));

// Utility methods that adapt host (V3) functions to be called from Wasm.
component HostAdapters {
	def i_i(func: 		(int) -> int) =>											HostFunc(SigCache.i_i, 	fun args => ri(func(ui(args[0]))));
	def ii_i(func: 		(int, int) -> int) =>										HostFunc(SigCache.ii_i, fun args => ri(func(ui(args[0]), ui(args[1]))));
	def ii_r(func: 		(int, int) -> HostResult) =>								HostFunc(SigCache.ii_i, fun args => func(ui(args[0]), ui(args[1])));
	def iii_i(func: 	(int, int, int) -> int) =>									HostFunc(SigCache.iii_i, fun args => ri(func(ui(args[0]), ui(args[1]), ui(args[2]))));
	def iiii_i(func: 	(int, int, int, int) -> int) =>								HostFunc(SigCache.iiii_i, fun args => ri(func(ui(args[0]), ui(args[1]), ui(args[2]), ui(args[3]))));
	def iiiii_i(func: 	(int, int, int, int, int) -> int) =>						HostFunc(SigCache.iiiii_i, fun args => ri(func(ui(args[0]), ui(args[1]), ui(args[2]), ui(args[3]), ui(args[4]))));
	def iiiiii_i(func: 	(int, int, int, int, int, int) -> int) =>					HostFunc(SigCache.iiiiii_i, fun args => ri(func(ui(args[0]), ui(args[1]), ui(args[2]), ui(args[3]), ui(args[4]), ui(args[5]))));
	def iiiiiii_i(func: (int, int, int, int, int, int, int) -> int) =>				HostFunc(SigCache.iiiiiii_i, fun args => ri(func(ui(args[0]), ui(args[1]), ui(args[2]), ui(args[3]), ui(args[4]), ui(args[5]), ui(args[6]))));
	//
	def iiiiillii_i(func: (int, int, int, int, int, long, long, int, int) -> int) =>HostFunc(SigCache.iiiiillii_i, fun args => ri(func(ui(args[0]), ui(args[1]), ui(args[2]), ui(args[3]), ui(args[4]), ul(args[5]), ul(args[6]), ui(args[7]), ui(args[8]))));
	def iiiilli_i(func: (int, int, int, int, long, long, int) -> int) =>			HostFunc(SigCache.iiiilli_i, fun args => ri(func(ui(args[0]), ui(args[1]), ui(args[2]), ui(args[3]), ul(args[4]), ul(args[5]), ui(args[6]))));
	def iiili_i(func: (int, int, int, long, int) -> int) =>							HostFunc(SigCache.iiili_i, fun args => ri(func(ui(args[0]), ui(args[1]), ui(args[2]), ul(args[3]), ui(args[4]))));
	def il_i(func: 		(int, long) -> int) =>										HostFunc(SigCache.il_i, 	fun args => ri(func(ui(args[0]), ul(args[1]))));
	def ili_i(func: 		(int, long, int) -> int) =>								HostFunc(SigCache.ili_i, 	fun args => ri(func(ui(args[0]), ul(args[1]), ui(args[2]))));
	def ilii_i(func: 		(int, long, int, int) -> int) =>						HostFunc(SigCache.ilii_i, 	fun args => ri(func(ui(args[0]), ul(args[1]), ui(args[2]), ui(args[3]))));
	def ill_i(func: 		(int, long, long) -> int) =>							HostFunc(SigCache.ill_i, 	fun args => ri(func(ui(args[0]), ul(args[1]), ul(args[2]))));
	def illi_i(func: 		(int, long, long, int) -> int) =>						HostFunc(SigCache.illi_i, 	fun args => ri(func(ui(args[0]), ul(args[1]), ul(args[2]), ui(args[3]))));
	def uu_u(func: 	(u32, u32) -> u32) =>											HostFunc(SigCache.ii_i, fun args => ru(func(uu(args[0]), uu(args[1]))));
	def uu_r(func: 	(u32, u32) -> HostResult) =>									HostFunc(SigCache.ii_i, fun args => func(uu(args[0]), uu(args[1])));
	// def i_v(func: (int) -> void) => 												HostFunc(SigCache.i_v, fun args => func(ui(args[0])));
	// def v_i(func: void -> int) => 													HostFunc(SigCache.v_i, fun args => ri(func()));


	def C_ii_i<C>(func: (C, int, int) -> int) => fun (c: C) => HostFunc(SigCache.ii_i, fun args => ri(func(c, ui(args[0]), ui(args[1]))));
	def C_uu_u<C>(func: (C, u32, u32) -> u32) => fun (c: C) => HostFunc(SigCache.ii_i, fun args => ru(func(c, uu(args[0]), uu(args[1]))));

}

// 	def C_i_i<C>(func: (C, int) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_1(_, wrap_i_i, func);
// 	}
// 	def C_ii_i<C>(func: (C, int, int) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_2(_, wrap_ii_i, func);
// 	}
// 	def C_iii_i<C>(func: (C, int, int, int) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_3(_, wrap_iii_i, func);
// 	}
// 	def C_iiii_i<C>(func: (C, int, int, int, int) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_4(_, wrap_iiii_i, func);
// 	}
// 	def C_iiiii_i<C>(func: (C, int, int, int, int, int) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_5(_, wrap_iiiii_i, func);
// 	}
// 	def C_iiiiii_i<C>(func: (C, int, int, int, int, int, int) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_6(_, wrap_iiiiii_i, func);
// 	}
// 	def C_iiiiiii_i<C>(func: (C, int, int, int, int, int, int, int) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_7(_, wrap_iiiiiii_i, func);
// 	}
// 	def C_iiiiillii_i<C>(func: (C, int, int, int, int, int, long, long, int, int) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_9(_, wrap_iiiiillii_i, func);
// 	}
// 	def C_iiiilli_i<C>(func: (C, int, int, int, int, long, long, int) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_7(_, wrap_iiiilli_i, func);
// 	}
// 	def C_iiili_i<C>(func: (C, int, int, int, long, int) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_5(_, wrap_iiili_i, func);
// 	}
// 	def C_il_i<C>(func: (C, int, long) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_2(_, wrap_il_i, func);
// 	}
// 	def C_ili_i<C>(func: (C, int, long, int) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_3(_, wrap_ili_i, func);
// 	}
// 	def C_ilii_i<C>(func: (C, int, long, int, int) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_4(_, wrap_ilii_i, func);
// 	}
// 	def C_ill_i<C>(func: (C, int, long, long) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_3(_, wrap_ill_i, func);
// 	}
// 	def C_illi_i<C>(func: (C, int, long, long, int) -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_4(_, wrap_illi_i, func);
// 	}
// 	def C_uu_u<C>(func: (C, u32, u32) -> u32) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_2(_, wrap_uu_u, func);
// 	}
// 	def C_i_v<C>(func: (C, int) -> void) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_1_0(_, wrap_i_v, func);
// 	}
// 	def C_v_i<C>(func: C -> void -> int) -> (C -> (Range<Value> -> HostResult)) {
// 		return adaptC_0(_, wrap_v_i, func);
// 	}
// }

// def adapt<P, R>(wrap: (P -> R, Range<Value>) -> HostResult, func: P -> R) -> (Range<Value> -> HostResult) {
// 	return wrap(func, _);
// }
// def adapt_0<R>(wrap: (void -> R, Range<Value>) -> HostResult, func: void -> R) -> (Range<Value> -> HostResult) {
// 	return wrap(func, _);
// }
// def adaptC_0<C, R>(c: C, wrap: (R, Range<Value>) -> HostResult, func: C -> R) -> (Range<Value> -> HostResult) {
// 	return wrap(func(c), _);
// }
// def adaptC_1<C, P0, R>(c: C, wrap: ((P0) -> R, Range<Value>) -> HostResult, func: (C, P0) -> R) -> (Range<Value> -> HostResult) {
// 	return wrap(func(c, _), _);
// }
// def adaptC_1_0<C, P0>(c: C, wrap: ((P0) -> void, Range<Value>) -> HostResult, func: (C, P0) -> void) -> (Range<Value> -> HostResult) {
// 	return wrap(func(c, _), _);
// }
// def adaptC_2<C, P0, P1, R>(c: C, wrap: ((P0, P1) -> R, Range<Value>) -> HostResult, func: (C, P0, P1) -> R) -> (Range<Value> -> HostResult) {
// 	return wrap(func(c, _, _), _);
// }
// def adaptC_3<C, P0, P1, P2, R>(c: C, wrap: ((P0, P1, P2) -> R, Range<Value>) -> HostResult, func: (C, P0, P1, P2) -> R) -> (Range<Value> -> HostResult) {
// 	return wrap(func(c, _, _, _), _);
// }
// def adaptC_4<C, P0, P1, P2, P3, R>(c: C, wrap: ((P0, P1, P2, P3) -> R, Range<Value>) -> HostResult, func: (C, P0, P1, P2, P3) -> R) -> (Range<Value> -> HostResult) {
// 	return wrap(func(c, _, _, _, _), _);
// }
// def adaptC_5<C, P0, P1, P2, P3, P4, R>(c: C, wrap: ((P0, P1, P2, P3, P4) -> R, Range<Value>) -> HostResult, func: (C, P0, P1, P2, P3, P4) -> R) -> (Range<Value> -> HostResult) {
// 	return wrap(func(c, _, _, _, _, _), _);
// }
// def adaptC_6<C, P0, P1, P2, P3, P4, P5, R>(c: C, wrap: ((P0, P1, P2, P3, P4, P5) -> R, Range<Value>) -> HostResult, func: (C, P0, P1, P2, P3, P4, P5) -> R) -> (Range<Value> -> HostResult) {
// 	return wrap(func(c, _, _, _, _, _, _), _);
// }
// def adaptC_7<C, P0, P1, P2, P3, P4, P5, P6, R>(c: C, wrap: ((P0, P1, P2, P3, P4, P5, P6) -> R, Range<Value>) -> HostResult, func: (C, P0, P1, P2, P3, P4, P5, P6) -> R) -> (Range<Value> -> HostResult) {
// 	return wrap(func(c, _, _, _, _, _, _, _), _);
// }
// def adaptC_8<C, P0, P1, P2, P3, P4, P5, P6, P7, R>(c: C, wrap: ((P0, P1, P2, P3, P4, P5, P6, P7) -> R, Range<Value>) -> HostResult, func: (C, P0, P1, P2, P3, P4, P5, P6, P7) -> R) -> (Range<Value> -> HostResult) {
// 	return wrap(func(c, _, _, _, _, _, _, _, _), _);
// }
// def adaptC_9<C, P0, P1, P2, P3, P4, P5, P6, P7, P8, R>(c: C, wrap: ((P0, P1, P2, P3, P4, P5, P6, P7, P8) -> R, Range<Value>) -> HostResult, func: (C, P0, P1, P2, P3, P4, P5, P6, P7, P8) -> R) -> (Range<Value> -> HostResult) {
// 	return wrap(func(c, _, _, _, _, _, _, _, _, _), _);
// }
// def wrap_i_i(func: (int) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]))));
// }
// def wrap_ii_i(func: (int, int) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_i(args[1]))));
// }
// def wrap_iii_i(func: (int, int, int) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_i(args[1]), Values.unbox_i(args[2]))));
// }
// def wrap_iiii_i(func: (int, int, int, int) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_i(args[1]), Values.unbox_i(args[2]), Values.unbox_i(args[3]))));
// }
// def wrap_iiiii_i(func: (int, int, int, int, int) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_i(args[1]), Values.unbox_i(args[2]), Values.unbox_i(args[3]), Values.unbox_i(args[4]))));
// }
// def wrap_iiiiii_i(func: (int, int, int, int, int, int) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_i(args[1]), Values.unbox_i(args[2]), Values.unbox_i(args[3]), Values.unbox_i(args[4]), Values.unbox_i(args[5]))));
// }
// def wrap_iiiiiii_i(func: (int, int, int, int, int, int, int) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_i(args[1]), Values.unbox_i(args[2]), Values.unbox_i(args[3]), Values.unbox_i(args[4]), Values.unbox_i(args[5]), Values.unbox_i(args[6]))));
// }
// def wrap_iiiiillii_i(func: (int, int, int, int, int, long, long, int, int) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_i(args[1]), Values.unbox_i(args[2]), Values.unbox_i(args[3]), Values.unbox_i(args[4]), Values.unbox_l(args[5]), Values.unbox_l(args[6]), Values.unbox_i(args[7]), Values.unbox_i(args[8]))));
// }
// def wrap_iiiilli_i(func: (int, int, int, int, long, long, int) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_i(args[1]), Values.unbox_i(args[2]), Values.unbox_i(args[3]), Values.unbox_l(args[4]), Values.unbox_l(args[5]), Values.unbox_i(args[6]))));
// }
// def wrap_iiili_i(func: (int, int, int, long, int) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_i(args[1]), Values.unbox_i(args[2]), Values.unbox_l(args[3]), Values.unbox_i(args[4]))));
// }
// def wrap_il_i(func: (int, long) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_l(args[1]))));
// }
// def wrap_ili_i(func: (int, long, int) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_l(args[1]), Values.unbox_i(args[2]))));
// }
// def wrap_ilii_i(func: (int, long, int, int) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_l(args[1]), Values.unbox_i(args[2]), Values.unbox_i(args[3]))));
// }
// def wrap_ill_i(func: (int, long, long) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_l(args[1]), Values.unbox_l(args[2]))));
// }
// def wrap_illi_i(func: (int, long, long, int) -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func(Values.unbox_i(args[0]), Values.unbox_l(args[1]), Values.unbox_l(args[2]), Values.unbox_i(args[3]))));
// }
// def wrap_uu_u(func: (u32, u32) -> u32, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_u(func(Values.unbox_u(args[0]), Values.unbox_u(args[1]))));
// }
// def wrap_i_v(func: (int) -> void, args: Range<Value>) -> HostResult {
// 	func(Values.unbox_i(args[0]));
// 	return HostResult.Value0;
// }
// def wrap_v_i(func: void -> int, args: Range<Value>) -> HostResult {
// 	return HostResult.Value1(Values.box_i(func()));
// }
