def S: SigCache;
def map = Strings.newMap<HostAdapter2_of<WasiInstance2>>();

def i_i = 			Wasi2_HostAdapter<int, int>.new(_, HostAdapters.i_i);
def i_v =			Wasi2_HostAdapter<int, void>.new(_, HostAdapters.i_v);
def ii_i = 			Wasi2_HostAdapter<(int, int), int>.new(_, HostAdapters.ii_i);
def iii_i = 		Wasi2_HostAdapter<(int, int, int), int>.new(_, HostAdapters.iii_i);
def iiii_i = 		Wasi2_HostAdapter<(int, int, int, int), int>.new(_, HostAdapters.iiii_i);
def iiiii_i = 		Wasi2_HostAdapter<(int, int, int, int, int), int>.new(_, HostAdapters.iiiii_i);
def iiiiii_i = 		Wasi2_HostAdapter<(int, int, int, int, int, int), int>.new(_, HostAdapters.iiiiii_i);
def iiiiiii_i = 	Wasi2_HostAdapter<(int, int, int, int, int, int, int), int>.new(_, HostAdapters.iiiiiii_i);
def iiiiillii_i =	Wasi2_HostAdapter<(int, int, int, int, int, long, long, int, int), int>.new(_, HostAdapters.iiiiillii_i);
def iiiilli_i = 	Wasi2_HostAdapter<(int, int, int, int, long, long, int), int>.new(_, HostAdapters.iiiilli_i);
def iiili_i = 		Wasi2_HostAdapter<(int, int, int, long, int), int>.new(_, HostAdapters.iiili_i);
def il_i = 			Wasi2_HostAdapter<(int, long), int>.new(_, HostAdapters.il_i);
def ili_i = 		Wasi2_HostAdapter<(int, long, int), int>.new(_, HostAdapters.ili_i);
def ilii_i =		Wasi2_HostAdapter<(int, long, int, int), int>.new(_, HostAdapters.ilii_i);
def ill_i = 		Wasi2_HostAdapter<(int, long, long), int>.new(_, HostAdapters.ill_i);
def illi_i = 		Wasi2_HostAdapter<(int, long, long, int), int>.new(_, HostAdapters.illi_i);
// def v_i = Wasi2_HostAdapter<void, int>.new(_, HostAdapters.v_i);

var x_ = void(
	// map["args_get"] =				ii_i(		fun i => i.args_get),
	// map["args_sizes_get"] = 		ii_i(		fun i => i.args_sizes_get),
	// map["environ_get"] =			ii_i(		fun i => i.environ_get),
	// map["environ_sizes_get"] =		ii_i(		fun i => i.environ_sizes_get),
	// map["fd_advise"] =				illi_i(		fun i => i.fd_advise),
	// map["fd_allocate"] =			ill_i(		fun i => i.fd_allocate),
	// map["fd_close"] =				i_i(		fun i => i.fd_close),
	map["fd_datasync"] =			i_i(		fun i => i.fd_datasync),
	// map["fd_fdstat_get"] =			ii_i(		fun i => i.fd_fdstat_get),
	// map["fd_fdstat_set_flags"] =	ii_i(		fun i => i.fd_fdstat_set_flags),
	// map["fd_fdstat_set_rights"] =	ill_i(		fun i => i.fd_fdstat_set_rights),
	// map["fd_filestat_get"] =		ii_i(		fun i => i.fd_filestat_get),
	// map["fd_filestat_set_size"] =	il_i(		fun i => i.fd_filestat_set_size),
	// map["fd_filestat_set_times"] =	illi_i(		fun i => i.fd_filestat_set_times),
	// map["fd_pread"] =				iiili_i(	fun i => i.fd_pread),
	// map["fd_prestat_get"] =			ii_i(		fun i => i.fd_prestat_get),
	// map["fd_prestat_dir_name"] =	iii_i(		fun i => i.fd_prestat_dir_name),
	// map["fd_pwrite"] =				iiili_i(	fun i => i.fd_pwrite),
	// map["fd_read"] =				iiii_i(		fun i => i.fd_read),
	// map["fd_readdir"] =				iiili_i(	fun i => i.fd_readdir),
	// map["fd_renumber"] =			ii_i(		fun i => i.fd_renumber),
	// map["fd_seek"] =				ilii_i(		fun i => i.fd_seek),
	// map["fd_sync"] =				i_i(		fun i => i.fd_sync),
	// map["fd_tell"] =				ii_i(		fun i => i.fd_tell),
	// map["fd_write"] =				iiii_i(		fun i => i.fd_write),
	// map["path_create_directory"] =	iii_i(		fun i => i.path_create_directory),
	// map["path_filestat_get"] =		iiiii_i(	fun i => i.path_filestat_get),
	// map["path_filestat_set_times"] =iiiilli_i(	fun i => i.path_filestat_set_times),
	// map["path_link"] =				iiiiiii_i(	fun i => i.path_link),
	// map["path_open"] =				iiiiillii_i(fun i => i.path_open),
	// map["path_readlink"] =			iiiiii_i(	fun i => i.path_readlink),
	// map["path_remove_directory"] =	iii_i(		fun i => i.path_remove_directory),
	// map["path_rename"] =			iiiiii_i(	fun i => i.path_rename),
	// map["path_symlink"] =			iiiii_i(	fun i => i.path_symlink),
	// map["path_unlink_file"] =		iii_i(		fun i => i.path_unlink_file),
	// map["clock_res_get"] =			ii_i(		fun i => i.clock_res_get),
	// map["clock_time_get"] =			ili_i(		fun i => i.clock_time_get),
	// map["sched_yield"] =			v_i(		fun i => i.sched_yield),
	// map["proc_exit"] =				i_v(		fun i => i.proc_exit),
	// map["proc_raise"] =				i_i(		fun i => i.proc_raise),
	// map["poll_oneoff"] =			iiii_i(		fun i => i.poll_oneoff),
	// map["random_get"] =				ii_i(		fun i => i.random_get),
	// map["sock_recv"] =				iiiiii_i(	fun i => i.sock_recv),
	// map["sock_send"] =				iiiii_i(	fun i => i.sock_send),
	// map["sock_shutdown"] =			ii_i(		fun i => i.sock_shutdown),
	// map["sock_accept"] =			iii_i(		fun i => i.sock_accept),
	()
);

class HostAdapter2_of<I> { // utility parameterized by instance type
	def sig: SigDecl;
	def func(name: string, i: I) -> HostFunction;
}

// class Wasi2_HostAdapter_i_i(f: WasiInstance2 -> (int) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		def host_func = HostAdapters.i_i(g);
// 		return HostFunction.new(name, host_func.sig, host_func.invoke);
// 	}
// }

class Wasi2_HostAdapter<P, R>(f: WasiInstance2 -> P -> R, adapter: (P -> R) -> HostFunc) extends HostAdapter2_of<WasiInstance2> {
	def func(name: string, i: WasiInstance2) -> HostFunction {
		var g = f(i);
		def host_func = adapter(g);
		return HostFunction.new(name, host_func.sig, host_func.invoke);
	}
}

// class Wasi2_HostAdapter_ii_i(f: WasiInstance2 -> (int, int) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.ii_i(g));
// 	}
// }

// class Wasi2_HostAdapter_iii_i(f: WasiInstance2 -> (int, int, int) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.iii_i(g));
// 	}
// }

// class Wasi2_HostAdapter_iiii_i(f: WasiInstance2 -> (int, int, int, int) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.iiii_i(g));
// 	}
// }

// class Wasi2_HostAdapter_iiiii_i(f: WasiInstance2 -> (int, int, int, int, int) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.iiiii_i(g));
// 	}
// }

// class Wasi2_HostAdapter_iiiiii_i(f: WasiInstance2 -> (int, int, int, int, int, int) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.iiiiii_i(g));
// 	}
// }

// class Wasi2_HostAdapter_iiiiiii_i(f: WasiInstance2 -> (int, int, int, int, int, int, int) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.iiiiiii_i(g));
// 	}
// }

// class Wasi2_HostAdapter_iiiiillii_i(f: WasiInstance2 -> (int, int, int, int, int, long, long, int, int) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.iiiiillii_i(g));
// 	}
// }

// class Wasi2_HostAdapter_iiiilli_i(f: WasiInstance2 -> (int, int, int, int, long, long, int) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.iiiilli_i(g));
// 	}
// }

// class Wasi2_HostAdapter_iiili_i(f: WasiInstance2 -> (int, int, int, long, int) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.iiili_i(g));
// 	}
// }

// class Wasi2_HostAdapter_il_i(f: WasiInstance2 -> (int, long) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.il_i(g));
// 	}
// }

// class Wasi2_HostAdapter_ili_i(f: WasiInstance2 -> (int, long, int) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.ili_i(g));
// 	}
// }

// class Wasi2_HostAdapter_ilii_i(f: WasiInstance2 -> (int, long, int, int) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.ilii_i(g));
// 	}
// }

// class Wasi2_HostAdapter_ill_i(f: WasiInstance2 -> (int, long, long) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.ill_i(g));
// 	}
// }

// class Wasi2_HostAdapter_illi_i(f: WasiInstance2 -> (int, long, long, int) -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.illi_i(g));
// 	}
// }

// class Wasi2_HostAdapter_i_v(f: WasiInstance2 -> int -> void) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.i_v(g));
// 	}
// }

// class Wasi2_HostAdapter_v_i(f: WasiInstance2 -> void -> int) extends HostAdapter2_of<WasiInstance2> {
// 	def func(name: string, i: WasiInstance2) -> HostFunction {
// 		var g = f(i);
// 		return HostFunction.new(name, sig, HostAdapters.v_i(g));
// 	}
// }

class WspOneModule2(instance: WasiInstance2) extends HostModule("wasi_snapshot_preview1b") {
	def preprocess(error: ErrorGen, module: Module, result: Array<Exportable>) {
		// var instance: WasiInstance2;
		var imports = module.imports;
		for (j < imports.length) {
			var i = imports[j];
			if (!Strings.equal(this.name, i.imp.module_name)) continue;
			if (!FuncDecl.?(i)) continue;
			var impf = FuncDecl.!(i), name = i.imp.field_name;
			var t = map[name];
			if (t == null) continue;
			// if (instance == null) instance = WasiInstance2.new();
			result[j] = t.func(name, instance);
		}
	}
}

// Enforces ordering on installation of platform-specific modules.
component WspOneRegistration2 {
	def X_ = ModuleRegistry.add(WspOneModule2.new(WasiInstance2.new()), true); // register platform-independent first
	def register(w: WspOneModule2) {
		// Platform-specific module should call this method to ensure ordering.
		ModuleRegistry.add(w, true);
	}
}


// Contains state and logic for a WASI instance.
class WasiInstance2 {
	def isTargetSpecific: bool = false;
	def args_get(argv: int, argvbuf: int) -> int;
	// def args_sizes_get(argc: int, argv_buf_size: int) -> int {
	// 	return 0;
	// }
	// def environ_get(environ: int, environ_buf: int) -> int {
	// 	return 0;
	// }
	// def environ_sizes_get(environ_count: int, environ_buf_size: int) -> int {
	// 	return 0;
	// }
	// def fd_advise(fd: int, offset: long, len: long, advice: int) -> int {
	// 	return 0;
	// }
	// def fd_allocate(fd: int, offset: long, len: long) -> int {
	// 	return 0;
	// }
	// def fd_close(fd: int) -> int {
	// 	return 0;
	// }
	fd_close(fd: int) -> int;
	def fd_datasync(fd: int) -> int {
		return 0;
	}
	// def fd_fdstat_get(fd: int, buf_ptr: int) -> int {
	// 	return 0;
	// }
	// def fd_fdstat_set_flags(fd: int, flags: int) -> int {
	// 	return 0;
	// }
	// def fd_fdstat_set_rights(fd: int, fs_rights_base: long, fs_rights_inheriting: long) -> int {
	// 	return 0;
	// }
	// def fd_filestat_get(fd: int, buf: int) -> int {
	// 	return 0;
	// }
	// def fd_filestat_set_size(fd: int, st_size: long) -> int {
	// 	return 0;
	// }
	// def fd_filestat_set_times(fd: int, st_atim: long, st_mtim: long, fst_flags: int) -> int {
	// 	return 0;
	// }
	// def fd_pread(fd: int, iovs: int, iovs_len: int, offset: long, nread: int) -> int {
	// 	return 0;
	// }
	// def fd_prestat_get(fd: int, buf: int) -> int {
	// 	return 0;
	// }
	// def fd_prestat_dir_name(fd: int, path: int, path_len: int) -> int {
	// 	return 0;
	// }
	// def fd_pwrite(fd: int, iovs: int, iovs_len: int, offset: long, nwritten: int) -> int {
	// 	return 0;
	// }
	// def fd_read(fd: int, iovs: int, iovs_len: int, nread: int) -> int {
	// 	return 0;
	// }
	// def fd_readdir(fd: int, buf: int, buf_len: int, cookie: long, bufused: int) -> int {
	// 	return 0;
	// }
	// def fd_renumber(from: int, to: int) -> int {
	// 	return 0;
	// }
	// def fd_seek(fd: int, offset: long, whence: int, newoffset: int) -> int {
	// 	return 0;
	// }
	// def fd_sync(fd: int) -> int {
	// 	return 0;
	// }
	// def fd_tell(fd: int, offset: int) -> int {
	// 	return 0;
	// }
	// def fd_write(fd: int, iovs: int, iovs_len: int, nwritten: int) -> int {
	// 	return 0;
	// }
	// def path_create_directory(fd: int, path: int, path_len: int) -> int {
	// 	return 0;
	// }
	// def path_filestat_get(fd: int, flags: int, path: int, path_len: int, buf: int) -> int {
	// 	return 0;
	// }
	// def path_filestat_set_times(fd: int, flags: int, path: int, path_len: int, st_atim: long, st_mtim: long, fst_flags: int) -> int {
	// 	return 0;
	// }
	// def path_link(old_fd: int, old_flags: int, old_path: int, old_path_len: int, new_fd: int, new_path: int, new_path_len: int) -> int {
	// 	return 0;
	// }
	// def path_open(dirfd: int, dirflags: int, path: int, path_len: int, o_flags: int, fs_rights_base: long, fs_rights_inheriting: long, fs_flags: int, fd: int) -> int {
	// 	return 0;
	// }
	// def path_readlink(dir_fd: int, path: int, path_len: int, buf: int, buf_len: int, buf_used: int) -> int {
	// 	return 0;
	// }
	// def path_remove_directory(fd: int, path: int, path_len: int) -> int {
	// 	return 0;
	// }
	// def path_rename(old_fd: int, old_path: int, old_path_len: int, new_fd: int, new_path: int, new_path_len: int) -> int {
	// 	return 0;
	// }
	// def path_symlink(old_path: int, old_path_len: int, fd: int, new_path: int, new_path_len: int) -> int {
	// 	return 0;
	// }
	// def path_unlink_file(fd: int, path: int, path_len: int) -> int {
	// 	return 0;
	// }
	// def clock_res_get(clock_id: int, resolution: int) -> int {
	// 	return 0;
	// }
	// def clock_time_get(clock_id: int, precision: long, time: int) -> int {
	// 	return 0;
	// }
	// def sched_yield() -> int {
	// 	return 0;
	// }
	// def proc_exit(code: int) {
	// 	return;
	// }
	// def proc_raise(sig: int) -> int {
	// 	return 0;
	// }
	// def poll_oneoff(in_: int, out_: int, nsubscriptions: int, nevents: int) -> int {
	// 	return 0;
	// }
	// def random_get(buf: int, buf_len: int) -> int {
	// 	return 0;
	// }
	// def sock_recv(sock: int, ri_data: int, ri_data_len: int, ri_flags: int, ro_data_len: int, ro_flags: int) -> int {
	// 	return 0;
	// }
	// def sock_send(sock: int, si_data: int, si_data_len: int, si_flags: int, ret_data_len: int) -> int {
	// 	return 0;
	// }
	// def sock_shutdown(sock: int, how: int) -> int {
	// 	return 0;
	// }
	// def sock_accept(sock: int, fd_flags: int, ro_fd: int) -> int {
	// 	return 0;
	// }
}
