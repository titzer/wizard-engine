// Copyright 2021 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Parses command-line options that configure an engine.
component EngineOptions {
	var group = OptionsRegistry.newGroup("ENGINE", printHelp);
	var extensions: Extension.set = Extensions.getDefaults();
	def DEFAULT_STACK_SIZE = 512u * 1024u;
	def STACK_SIZE = group.newSizeOption("stack-size", DEFAULT_STACK_SIZE, "Initial stack size in bytes for Wasm execution stacks.");
	def X_ = OptionsRegistry.addParseFunc(parse);

	def parse(arg: string, err: ErrorGen) -> bool {
		if (Strings.startsWith(arg, "--ext:")) {
			if (Strings.endsWithFrom(arg, 6, "all")) {
				extensions = Extension.set.all;
				return true;
			}
			for (e in Extension) {
				if (Strings.endsWithFrom(arg, 6, e.short_name)) {
					extensions |= Extensions.setImplications(e);
					return true;
				}
			}
		}
		if (Strings.startsWith(arg, "--mode=")) {
			return ExecuteOptions.setMode(arg[7 ...]);
		}
		return false;
	}
	def printHelp(out: TraceBuilder) {
		var H = out.putsln, L = out.ln;
		H("Wizard supports a number of engine-wide options which enable extensions and configure");
		H("the execution mode. Each extension can be enabled independently with its own flag.");
		H("Some extensions imply other extensions as indicated below.");
		L();
		
		for (e in Extension) {
			out.puts("    --ext:");
			out.puts(e.short_name);
			out.pad(' ', 32);
			out.puts(e.help);
			out.ln();

			var set: Extension.set = e;
			var none: Extension.set;
			set = Extensions.setImplications(set) - e;
			if (set != none) {
				out.puts("        implies: ");
				var first = true;
				for (e in set) {
					if (!first) out.csp();
					out.puts(e.short_name);
					first = false;
				}
				out.ln();
			}
		}
		L();
		H("This build of the Wizard Engine has these extensions automatically enabled:");
		out.puts("    ");
		for (e in Extensions.getDefaults()) {
			out.puts(e.short_name);
			out.sp();
		}
		out.ln();
		L();
		ExecuteOptions.printHelp(out);
		L();
		H("Other engine configuration options include:");
		L();
		group.print(out, false);
	}
}
